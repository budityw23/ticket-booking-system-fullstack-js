version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: ticket-booking-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: ticket-booking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ticket-booking-backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/nodemon.json:/usr/src/app/nodemon.json
      - ./backend/tsconfig.json:/usr/src/app/tsconfig.json
      - /usr/src/app/node_modules
      - ./backend/logs:/usr/src/app/logs
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/ticket-booking
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network

  frontend-user:
    build:
      context: ./frontend-user
      dockerfile: Dockerfile
    container_name: ticket-booking-frontend-user
    ports:
      - "80:80"
    volumes:
      - ./frontend-user:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  frontend-admin:
    build:
      context: ./frontend-admin
      dockerfile: Dockerfile
    container_name: ticket-booking-frontend-admin
    ports:
      - "81:80"
    volumes:
      - ./frontend-user:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
